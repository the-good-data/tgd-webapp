<?php

/**
 * This is the model base class for the table "{{members_pii}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MembersPii".
 *
 * Columns in table "{{members_pii}}" available as properties of the model,
 * followed by relations of table "{{members_pii}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $firstname
 * @property string $surname
 * @property string $streetnumber
 * @property string $street
 * @property string $streetdetails
 * @property string $city
 * @property string $state
 * @property string $zipcode
 * @property integer $id_countries
 * @property string $email
 * @property string $birthdate
 * @property boolean $agreerules
 * @property string $created_at
 * @property string $updated_at
 *
 * @property Countries $idCountries
 */
abstract class BaseMembersPii extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{members_pii}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MembersPii|MembersPiis', $n);
	}

	public static function representingColumn() {
		return 'firstname';
	}

	public function rules() {
		return array(
			array('firstname, surname, streetnumber, street, streetdetails, city, state, zipcode, id_countries, email, birthdate, agreerules', 'required'),
			array('id_countries', 'numerical', 'integerOnly'=>true),
			array('firstname, surname, streetnumber, street, streetdetails, city, state, zipcode, email', 'length', 'max'=>128),
			array('created_at, updated_at', 'safe'),
			array('created_at, updated_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, firstname, surname, streetnumber, street, streetdetails, city, state, zipcode, id_countries, email, birthdate, agreerules, created_at, updated_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idCountries' => array(self::BELONGS_TO, 'Countries', 'id_countries'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'firstname' => Yii::t('app', 'Firstname'),
			'surname' => Yii::t('app', 'Surname'),
			'streetnumber' => Yii::t('app', 'Streetnumber'),
			'street' => Yii::t('app', 'Street'),
			'streetdetails' => Yii::t('app', 'Streetdetails'),
			'city' => Yii::t('app', 'City'),
			'state' => Yii::t('app', 'State'),
			'zipcode' => Yii::t('app', 'Zipcode'),
			'id_countries' => null,
			'email' => Yii::t('app', 'Email'),
			'birthdate' => Yii::t('app', 'Birthdate'),
			'agreerules' => Yii::t('app', 'Agreerules'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'idCountries' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('firstname', $this->firstname, true);
		$criteria->compare('surname', $this->surname, true);
		$criteria->compare('streetnumber', $this->streetnumber, true);
		$criteria->compare('street', $this->street, true);
		$criteria->compare('streetdetails', $this->streetdetails, true);
		$criteria->compare('city', $this->city, true);
		$criteria->compare('state', $this->state, true);
		$criteria->compare('zipcode', $this->zipcode, true);
		$criteria->compare('id_countries', $this->id_countries);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('birthdate', $this->birthdate, true);
		$criteria->compare('agreerules', $this->agreerules);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
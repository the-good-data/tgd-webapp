<?php

/**
 * This is the model base class for the table "{{interest_categories_counts}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "InterestCategoriesCounts".
 *
 * Columns in table "{{interest_categories_counts}}" available as properties of the model,
 * followed by relations of table "{{interest_categories_counts}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $member_id
 * @property integer $user_id
 * @property integer $site_id
 * @property integer $counter
 * @property string $created_at
 * @property string $updated_at
 *
 */
abstract class BaseInterestCategoriesCounts extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{interest_categories_counts}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'InterestCategoriesCounts|InterestCategoriesCounts', $n);
	}

	public static function representingColumn() {
		return 'site';
	}

	public function rules() {
		return array(
			array('member_id, site_id, counter', 'numerical', 'integerOnly'=>true),
			array('member_id, user_id, site_id, counter, created_at, updated_at', 'safe'),
			array('id, user_id, member_id, site_id, counter, created_at, updated_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array();
	}

	public function pivotModels() {
		return array();
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'member_id' => Yii::t('app', 'Member'),
			'user_id' => Yii::t('app', 'User'),
			'site_id' => Yii::t('app', 'Site'),
			'counter' => Yii::t('app', 'Counter'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('member_id', $this->member_id);
		$criteria->compare('user_id', $this->member_id);
		$criteria->compare('site_id', $this->site_id, true);
		$criteria->compare('counter', $this->counter, true);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
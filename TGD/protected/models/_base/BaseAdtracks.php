<?php

/**
 * This is the model base class for the table "{{adtracks}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Adtracks".
 *
 * Columns in table "{{adtracks}}" available as properties of the model,
 * followed by relations of table "{{adtracks}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $user_id
 * @property integer $member_id
 * @property integer $adtracks_sources_id
 * @property string $domain
 * @property string $url
 * @property string $usertime
 * @property string $status
 * @property string $created_at
 * @property string $updated_at
 *
 * @property AdtracksSources $adtracksSources
 */
abstract class BaseAdtracks extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{adtracks}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Webtrack|Webtrack', $n);
	}

	public static function representingColumn() {
		return 'domain';
	}

	public function rules() {
		return array(
			array('adtracks_sources_id', 'required'),
			array('member_id, adtracks_sources_id', 'numerical', 'integerOnly'=>true),
			array('user_id, domain, status', 'length', 'max'=>255),
			array('url, usertime, created_at, updated_at', 'safe'),
			array('user_id, member_id, domain, url, usertime, status, created_at, updated_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, member_id, adtracks_sources_id, domain, url, usertime, status, created_at, updated_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'adtracksSources' => array(self::BELONGS_TO, 'AdtracksSources', 'adtracks_sources_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => Yii::t('app', 'User'),
			'member_id' => Yii::t('app', 'Member'),
			'adtracks_sources_id' => 'Broker',
			'domain' => Yii::t('app', 'Domain'),
			'url' => Yii::t('app', 'Url'),
			'usertime' => Yii::t('app', 'Usertime'),
			'status' => Yii::t('app', 'Status'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'adtracksSources' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user_id', $this->user_id, true);
		$criteria->compare('member_id', $this->member_id);
		$criteria->compare('adtracks_sources_id', $this->adtracks_sources_id);
		$criteria->compare('LOWER(domain)', strtolower($this->domain), true);
		$criteria->compare('LOWER(url)', strtolower($this->url), true);
		$criteria->compare('usertime', $this->usertime, true);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
<?php

/**
 * This is the model base class for the table "{{queries_blacklist}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "QueriesBlacklist".
 *
 * Columns in table "{{queries_blacklist}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $lang
 * @property string $category
 * @property string $topic
 * @property string $search_term
 * @property string $headword
 * @property string $midword
 * @property string $action
 * @property string $created_at
 * @property string $updated_at
 *
 */
abstract class BaseQueriesBlacklist extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{queries_blacklist}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'QueriesBlacklist|QueriesBlacklists', $n);
	}

	public static function representingColumn() {
		return 'lang';
	}

	public function rules() {
		return array(
			array('lang', 'required'),
			array('lang', 'length', 'max'=>128),
			array('category, topic, search_term, headword, midword, action', 'length', 'max'=>255),
			array('created_at, updated_at', 'safe'),
			array('category, topic, search_term, headword, midword, action, created_at, updated_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, lang, category, topic, search_term, headword, midword, action, created_at, updated_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'lang' => Yii::t('app', 'Lang'),
			'category' => Yii::t('app', 'Category'),
			'topic' => Yii::t('app', 'Topic'),
			'search_term' => Yii::t('app', 'Search Term'),
			'headword' => Yii::t('app', 'Headword'),
			'midword' => Yii::t('app', 'Midword'),
			'action' => Yii::t('app', 'Action'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('lang', $this->lang, true);
		$criteria->compare('category', $this->category, true);
		$criteria->compare('topic', $this->topic, true);
		$criteria->compare('search_term', $this->search_term, true);
		$criteria->compare('headword', $this->headword, true);
		$criteria->compare('midword', $this->midword, true);
		$criteria->compare('action', $this->action, true);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}